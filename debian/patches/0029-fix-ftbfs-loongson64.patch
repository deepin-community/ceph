Author: Dandan Zhang <zhangdandan@loongson.cn>
Description: Fixing FTBFS on loong64 (Closes: #1055047, #1069022).

diff -Naurp ceph.orig/src/rocksdb/CMakeLists.txt ceph/src/rocksdb/CMakeLists.txt
--- ceph.orig/src/rocksdb/CMakeLists.txt
+++ ceph/src/rocksdb/CMakeLists.txt
@@ -245,6 +245,14 @@ if(CMAKE_SYSTEM_PROCESSOR MATCHES "s390x
   endif(HAS_S390X_MARCH_NATIVE)
 endif(CMAKE_SYSTEM_PROCESSOR MATCHES "s390x")
 
+if(CMAKE_SYSTEM_PROCESSOR MATCHES "loongarch64")
+  CHECK_C_COMPILER_FLAG("-march=loongarch64" HAS_LOONGARCH64)
+  if(HAS_LOONGARCH64)
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mtune=loongarch64")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mtune=loongarch64")
+  endif(HAS_LOONGARCH64)
+endif(CMAKE_SYSTEM_PROCESSOR MATCHES "loongarch64")
+
 option(PORTABLE "build a portable binary" OFF)
 option(FORCE_SSE42 "force building with SSE4.2, even when PORTABLE=ON" OFF)
 option(FORCE_AVX "force building with AVX, even when PORTABLE=ON" OFF)
diff -Naurp ceph.orig/src/rocksdb/Makefile ceph/src/rocksdb/Makefile
--- ceph.orig/src/rocksdb/Makefile
+++ ceph/src/rocksdb/Makefile
@@ -2058,7 +2058,7 @@ JAVA_INCLUDE = -I$(JAVA_HOME)/include/ -
 ifeq ($(PLATFORM), OS_SOLARIS)
 	ARCH := $(shell isainfo -b)
 else ifeq ($(PLATFORM), OS_OPENBSD)
-	ifneq (,$(filter amd64 ppc64 ppc64le s390x arm64 aarch64 sparc64, $(MACHINE)))
+	ifneq (,$(filter amd64 ppc64 ppc64le s390x arm64 aarch64 sparc64 loongarch64, $(MACHINE)))
 		ARCH := 64
 	else
 		ARCH := 32
diff -Naurp ceph.orig/src/rocksdb/port/port_posix.h ceph/src/rocksdb/port/port_posix.h
--- ceph.orig/src/rocksdb/port/port_posix.h
+++ ceph/src/rocksdb/port/port_posix.h
@@ -169,6 +169,8 @@ static inline void AsmVolatilePause() {
   asm volatile("isb");
 #elif defined(__powerpc64__)
   asm volatile("or 27,27,27");
+#elif defined(__loongarch64)
+  asm volatile("dbar 0");
 #endif
   // it's okay for other platforms to be no-ops
 }
diff -Naurp ceph.orig/src/rocksdb/util/xxhash.h ceph/src/rocksdb/util/xxhash.h
--- ceph.orig/src/rocksdb/util/xxhash.h
+++ ceph/src/rocksdb/util/xxhash.h
@@ -1287,7 +1287,8 @@ XXH_PUBLIC_API XXH128_hash_t XXH128(cons
 
 #ifndef XXH_FORCE_ALIGN_CHECK  /* can be defined externally */
 #  if defined(__i386)  || defined(__x86_64__) || defined(__aarch64__) \
-   || defined(_M_IX86) || defined(_M_X64)     || defined(_M_ARM64) /* visual */
+   || defined(_M_IX86) || defined(_M_X64)     || defined(_M_ARM64) /* visual */ \
+   || defined(__loongarch64)
 #    define XXH_FORCE_ALIGN_CHECK 0
 #  else
 #    define XXH_FORCE_ALIGN_CHECK 1
diff -Naurp ceph.orig/src/rocksdb/utilities/transactions/lock/range/range_tree/lib/portability/toku_time.h ceph/src/rocksdb/utilities/transactions/lock/range/range_tree/lib/portability/toku_time.h
--- ceph.orig/src/rocksdb/utilities/transactions/lock/range/range_tree/lib/portability/toku_time.h
+++ ceph/src/rocksdb/utilities/transactions/lock/range/range_tree/lib/portability/toku_time.h
@@ -160,6 +160,10 @@ static inline tokutime_t toku_time_now(v
   struct timeval tv;
   gettimeofday(&tv, nullptr);
   return (uint64_t)tv.tv_sec * 1000000 + tv.tv_usec;
+#elif defined(__loongarch64)
+  unsigned long result;
+  asm volatile ("rdtime.d\t%0,$r0" : "=r" (result));
+  return result;
 #else
 #error No timer implementation for this platform
 #endif
